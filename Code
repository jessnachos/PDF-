import os
import re
import shutil
import pdfplumber
from PIL import Image
import pytesseract
from pdf2image import convert_from_path
import PyPDF2

# Path to the Tesseract executable (change this path as needed)
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

# Step 1: Find PDF files in a directory
def find_pdf_files(directory):
    pdf_files = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.lower().endswith(".pdf"):
                pdf_files.append(os.path.join(root, file))
    return pdf_files

# Step 2: Search for variables within PDFs
def search_pdf_for_variable(pdf_path, variable_pattern):
    with open(pdf_path, "rb") as pdf_file:
        pdf_reader = PyPDF2.PdfFileReader(pdf_file)
        text = ""
        for page_num in range(pdf_reader.numPages):
            text += pdf_reader.getPage(page_num).extractText()
        match = re.search(variable_pattern, text)
        if match:
            return match.group(0)
    return None

# Step 3: Organize PDFs into variable-specific folders
def organize_pdfs(pdf_files, variable_pattern, output_directory):
    os.makedirs(output_directory, exist_ok=True)
    for pdf_file in pdf_files:
        variable = search_pdf_for_variable(pdf_file, variable_pattern)
        if variable:
            variable_folder = os.path.join(output_directory, variable)
            os.makedirs(variable_folder, exist_ok=True)
            shutil.move(pdf_file, os.path.join(variable_folder, os.path.basename(pdf_file)))

# Step 4: Search variable folders for PDFs, OCR handwritten variables, and rename PDFs
def ocr_handwritten_variable(pdf_path):
    with pdfplumber.open(pdf_path) as pdf:
        total_pages = len(pdf.pages)
        for page_number in range(1, total_pages + 1):
            page = pdf.pages[page_number - 1]
            image = page.to_image()
            img_path = f"temp_page_{page_number}.png"
            image.save(img_path, format="PNG")
            variable = pytesseract.image_to_string(Image.open(img_path))
            os.remove(img_path)
            if variable.strip():
                return variable.strip()
    return None

def rename_pdfs_in_variable_folders(variable_folders):
    for folder in variable_folders:
        for pdf_file in os.listdir(folder):
            if pdf_file.lower().endswith(".pdf"):
                pdf_path = os.path.join(folder, pdf_file)
                variable = ocr_handwritten_variable(pdf_path)
                if variable:
                    new_file_name = f"{variable}.pdf"
                    os.rename(pdf_path, os.path.join(folder, new_file_name))

if __name__ == "__main__":
    # Step 1: Find PDF files in a directory
    pdf_directory = "pdfs_directory"
    pdf_files = find_pdf_files(pdf_directory)

    # Step 2: Search for variables within PDFs
    variable_pattern = r"YourVariablePatternHere"  # Replace with your variable extraction pattern

    # Step 3: Organize PDFs into variable-specific folders
    output_directory = "organized_pdfs"
    organize_pdfs(pdf_files, variable_pattern, output_directory)

    # Step 4: Search variable folders for PDFs, OCR handwritten variables, and rename PDFs
    variable_folders = [os.path.join(output_directory, folder) for folder in os.listdir(output_directory)]
    rename_pdfs_in_variable_folders(variable_folders)
